package com.cb.service;

import java.util.List;

import com.cb.bean.PayeeTable;
import com.cb.bean.ServiceTracker;
import com.cb.bean.Transaction;

public interface BankingService {
    
    /**
     * @param userName is generated at the time of registration
     * @param password is unique for unique user
     * @return
     */
    
    public List<Integer> getUserAccounts(String userName);
    /**
     * @param accNo is unique for every user to make transaction
     * @return
     */
    public List<Transaction> miniStatement(int accNo);
    /**
     * @param accNo is unique for every user to make transaction
     * @return
     */
    public List<Transaction> detailedStatement(int accNo);
    /**
     * @param userName is generated at the time of registration
     * @return
     */
    public int getCurrentAcNo(String userName);
    /**
     * @param userName is generated at the time of registration
     * @return
     */
    public String getCurrentAddress(String userName);
    /**
     * @param userName is generated at the time of registration
     * @param address is given by user at the time of registration
     * @return
     */
    public String updateAddress(String userName, String address);
    /**
     * @param userName is generated at the time of registration
     * @param oldPass is old password generated by user
     * @param newPass is new password generated by user
     * @return
     */
    public String changePassword(String userName,String oldPass,String newPass);
    /**
     * @param accNo is unique for every user to make transaction
     * @return
     */
    public String chequeRequest(int accNo);
    /**
     * @param accNo is unique for every user to make transaction
     * @return
     */
    public List<ServiceTracker> getAllServiceRequested(int accNo);
    /**
     * @param userName is generated at the time of registration
     * @param requestID is generated for particular service request
     * @return
     */
    public List<ServiceTracker> getServiceRequestById(String userName, int requestID);
    /**
     * @param fromAcChoice is the account from  where you want to send money
     * @return
     */
    public double getAcAvailableBalance(int fromAcChoice);
    /**
     * @param toAcChoice is the account where you want to send money
     * @param fromAcChoice  is the account from  where you want to send money
     * @param amt is the amount user wants to transfer
     * @return
     */
    public double fundTransfer(int toAcChoice,int fromAcChoice,int amt);
    /**
     * @param userName is generated at the time of registration
     * @return
     */
    public List<PayeeTable> getPayeeAccountId(String userName);
    /**
     * @param user_id is the unique id of user
     * @param payee_account_id is the unique account no of user
     * @param nickname is the short name of user
     * @return
     */
    public String addPayee(String user_id,int payee_account_id,String nickname);
    /**
     * @param account_no is unique for every user to make transaction
     * @param userName is generated at the time of registration
     * @return
     */
    public boolean isAccountExist(int account_no, String userName);
    /**
     * @return
     */
    public int getURN();
    /**
     * @param userName is generated at the time of registration
     * @return
     */
    public String validateAndCreatePayeeAccount(String userName);
    /**
     * @param toAcChoice is the account from from where you want to send money
     * @param fromAcChoice is the account from  where you want to send money
     * @param amt is the amount user wants to transfer
     */
    public void checkBalanceAndMakeTransaction(int toAcChoice,int fromAcChoice,int amt);
    /**
     * @param userName is generated at the time of registration
     * @param tnxPassword is password generated for transaction
     * @return
     */
    public boolean checkTransactionPassword(String userName, String tnxPassword);
    /**
     * @param username is generated at the time of registration
     * @return
     */
    public boolean isUserExist(String username);
    /**
     * @param userName is generated at the time of registration
     * @param oldPass  is old password generated by user
     * @return
     */
    public boolean checkOldPassword(String userName,String oldPass);
        
}




